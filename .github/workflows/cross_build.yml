name: Cross Build All

on:
  workflow_dispatch:
  push:
    tags:
      - '20*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}

      - name: install requirements
        run: |
          python3 cross_build.py --install_requirements=True

      - name: install cargo zig build
        run: |
          python3 cross_build.py --install_cargo_zig_build=True

      - name: add rust targets
        run: |
          python3 cross_build.py --add_rust_targets=True

      - name: build x86_64-pc-windows-gnu
        run: |
          python3 cross_build.py --build_rust_targets=True --target=x86_64-pc-windows-gnu

      - name: build aarch64-pc-windows-gnullvm
        run: |
          python3 cross_build.py --build_rust_targets=True --target=aarch64-pc-windows-gnullvm

      - name: build x86_64-apple-darwin
        run: |
          python3 cross_build.py --build_rust_targets=True --target=x86_64-apple-darwin

      - name: build aarch64-apple-darwin
        run: |
          python3 cross_build.py --build_rust_targets=True --target=aarch64-apple-darwin

      - name: build x86_64-unknown-linux-gnu
        run: |
          python3 cross_build.py --build_rust_targets=True --target=x86_64-unknown-linux-gnu

      - name: build aarch64-unknown-linux-gnu
        run: |
          python3 cross_build.py --build_rust_targets=True --target=aarch64-unknown-linux-gnu

      - name: package rust targets
        run: |
          python3 cross_build.py --package_rust_targets=True --check_build_results=True

      - name: list artifacts
        run: |
          echo "x86_64_pc_windows_file_name=$(basename $(ls target/cross_build/x86_64-pc-windows*.zip))" >> $GITHUB_ENV
          echo "aarch64_pc_windows_file_name=$(basename $(ls target/cross_build/aarch64-pc-windows*.zip))" >> $GITHUB_ENV
          echo "x86_64_apple_darwin_file_name=$(basename $(ls target/cross_build/x86_64-apple-darwin*.xz))" >> $GITHUB_ENV
          echo "aarch64_apple_darwin_file_name=$(basename $(ls target/cross_build/aarch64-apple-darwin*.xz))" >> $GITHUB_ENV
          echo "x86_64_unknown_linux_file_name=$(basename $(ls target/cross_build/x86_64-unknown-linux*.xz))" >> $GITHUB_ENV
          echo "aarch64_unknown_linux_file_name=$(basename $(ls target/cross_build/aarch64-unknown-linux*.xz))" >> $GITHUB_ENV

      - name: upload ${{ env.x86_64_pc_windows_file_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.x86_64_pc_windows_file_name }}
          path: target/cross_build/${{ env.x86_64_pc_windows_file_name }}
          if-no-files-found: error

      - name: upload ${{ env.aarch64_pc_windows_file_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.aarch64_pc_windows_file_name }}
          path: target/cross_build/${{ env.aarch64_pc_windows_file_name }}
          if-no-files-found: error

      - name: upload ${{ env.x86_64_apple_darwin_file_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.x86_64_apple_darwin_file_name }}
          path: target/cross_build/${{ env.x86_64_apple_darwin_file_name }}
          if-no-files-found: error

      - name: upload ${{ env.aarch64_apple_darwin_file_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.aarch64_apple_darwin_file_name }}
          path: target/cross_build/${{ env.aarch64_apple_darwin_file_name }}
          if-no-files-found: error

      - name: upload ${{ env.x86_64_unknown_linux_file_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.x86_64_unknown_linux_file_name }}
          path: target/cross_build/${{ env.x86_64_unknown_linux_file_name }}
          if-no-files-found: error

      - name: upload ${{ env.aarch64_unknown_linux_file_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.aarch64_unknown_linux_file_name }}
          path: target/cross_build/${{ env.aarch64_unknown_linux_file_name }}
          if-no-files-found: error
